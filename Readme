1,一个Linux内核模块主要由如下几个部分组成。
	1.1 模块加载函数（一般需要）
 		当通过insmod或modprobe 命令加载内核模块时，模块的加载函数会自动被内核执行，完成模块的相关初始化。
	1.2 模块卸载函数（一般需要）
 		当通过rmmod命令卸载模块时，模块的卸载函数会自动内内核执行，完成与模块卸载函数相反的功能。
 	1.3 模块许可证声明(必须)
		许可证（LICENSE）声明描述内核模块的许可权限，如果不声明LICENSE,模块被加载时，将收到内核被污染（kernel tainted）的警告。
		MODULE_LINCENSE("Dual BSD/GPL")的语句声明模块采用BSD/GPL双LINCENSE。
	1.4 模块参数（可选）
		模块参数是模块被加载的时候可以被传递给它的值，它本身对应模块内部的全局变量。
	1.5 模块导出符号（可选）
		内核模块可以导出符号（symbol,对应于函数或变量），这样其他模块可以使用本模块中的变量或函数。
	1.6 模块作者等信息声明（可选）

2. Linux2.6 的 “proc/kallsyms”文件对应着内核符号表，它记录了符号以及符号所在的内存地址。
	模块可以使用如下宏到处符号到内核符号表：
	EXPORT_SYMBOL(符号名)；
	EXPORT_SYMBOL_GPL(符号名)；
	导出的符号将可以被其他模块使用，使用前声明一下即可，EXPORT_SYMBOL_GPL()只适用于包含GPL许可权的模块。
